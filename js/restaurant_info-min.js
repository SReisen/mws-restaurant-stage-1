let restaurant,reviews,revTrans;var map;let markFav,container;window.initMap=(()=>{fetchRestaurantFromURL((e,t)=>{e?console.log("Wow an error...."):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:t.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map))})}),openForm=(()=>{document.getElementById("reviewModal").style.display="block"}),closeForm=(()=>{document.getElementById("reviewModal").style.display="none",document.getElementById("footer").appendChild(document.getElementById("reviewModal")),resetForm()}),resetForm=(()=>{document.getElementById("userRating").reset()}),processForm=(()=>{let e,t=document.getElementById("formName").value;document.getElementById("radioButton1").checked?e=1:document.getElementById("radioButton2").checked?e=2:document.getElementById("radioButton3").checked?e=3:document.getElementById("radioButton4").checked?e=4:document.getElementById("radioButton5").checked&&(e=5);let n=document.getElementById("comments").value,r='{ "restaurant_id" : '+self.restaurant.id+', "name": "'+t+'", "rating": '+e+', "comments": "'+n+'"}';closeForm(),"online"==condition?sendReview(r):(document.getElementById("reviews-list").insertBefore(createReviewHTML(JSON.parse(r)),document.getElementById("reviews-list").childNodes[0]),addOfflineReview(r))}),sendAllOfflineReviews=(()=>{let e;dbPromise.then(function(t){t.transaction("offlineReviewStore","readwrite").objectStore("offlineReviewStore").getAll().then(function(t){t.forEach(function(t){e=t.restaurant_id,sendReview(t).then(function(){clearOfflineReview(t)})}),DBHelper.fetchReviewById(e).then(function(e){updateReviewList(e)})})}).then(function(){console.log("sendAllOffline...done..")})}),sendReview=(e=>fetch("http://localhost:1337/reviews/",{method:"post",mode:"no-cors",headers:{"Content-Type":"application/json"},body:e}).then(function(){console.log("POST successfull")}).catch(t=>{console.log("Network Error:",t),addOfflineReview(e)}).then(t=>{let n=JSON.parse(e).restaurant_id;DBHelper.fetchReviewById(n).then(function(e){updateReviewList(e)})})),updateFavCheckbox=(()=>{"true"==self.restaurant.is_favorite?(markFav.checked=!0,markFav.setAttribute("aria-checked","true")):(markFav.checked=!1,markFav.setAttribute("aria-checked","false"))}),setFavorit=(e=>{let t;"undefined"!=self.restaurant.is_favorite&&0!=self.restaurant.is_favorite||(self.restaurant.is_favorite="false"),t="true"==self.restaurant.is_favorite?"false":"true",dbPromise.then(n=>{n.transaction("restaurantStore","readwrite").objectStore("restaurantStore").get(e).then(function(e){e.is_favorite=t,writeDBItem(e)}),self.restaurant.is_favorite=t,updateFavCheckbox()}).then(function(){favUrl="http://localhost:1337/restaurants/"+e+"/?is_favorite="+t;fetch(favUrl,{method:"POST"})}).catch(function(e){console.log("Request failed",e)})}),fetchReview=(e=>readReviewsByID(e).then(function(t){return"undefined"==t||""==t?DBHelper.fetchReviewById(e).then(function(e){return e}):t})),fetchRestaurantFromURL=(e=>{let t="false";const n=getParameterByName("id");n||(error="No restaurant id in URL",e(error,null)),readDBRestaurantById(n).then(function(r){self.restaurant=r,fetchReview(self.restaurant.id).then(function(a){revTrans=a,"online"==condition&&DBHelper.fetchRestaurantById(n,(e,n)=>{if(t="true",n&&"undefined"!=n)return JSON.stringify(self.restaurant)==JSON.stringify(n)?(t=!1,void console.log("Restaurant data has not changed!")):(self.restaurant=n,void updateRestaurantHTML());console.error(e)}),"false"==t&&(fillRestaurantHTML(),e(null,r))}).catch(function(t){console.log(t),revTrans="",fillRestaurantHTML(),e(null,r)})})}),updateRestaurantHTML=(e=>{document.getElementById("restaurant-hours").innerHTML="",document.getElementById("reviews-container").innerHTML="",fillRestaurantHTML()}),fillRestaurantHTML=((e=self.restaurant)=>{document.getElementById("restaurant-name").innerHTML=e.name,document.getElementById("restaurant-address").innerHTML=e.address;const t=document.getElementById("restaurant-img");t.className="restaurant-img",t.alt="restaurant "+e.name;const n=window.innerWidth;"/icon/undefined.jpg"==DBHelper.imageUrlForRestaurant(e)?(t.src="/icon/no-pic.svg",t.alt="Sorry, there is no image for "+e.name):t.src=n>800?DBHelper.imageUrlForRestaurant(e).replace(".jpg","-800px.jpg"):n>600?DBHelper.imageUrlForRestaurant(e).replace(".jpg","-600px.jpg"):DBHelper.imageUrlForRestaurant(e).replace(".jpg","-300px.jpg"),document.getElementById("restaurant-cuisine").innerHTML=e.cuisine_type+" Cousine",e.operating_hours&&fillRestaurantHoursHTML(),fillReviewsHTML()}),fillRestaurantHoursHTML=((e=self.restaurant.operating_hours)=>{const t=document.getElementById("restaurant-hours");for(let n in e){const r=document.createElement("tr");r.tabIndex=0;const a=document.createElement("td");a.innerHTML=n,r.appendChild(a);const o=document.createElement("td");o.innerHTML=e[n],r.appendChild(o),t.appendChild(r)}}),fillReviewsHTML=((e=revTrans)=>{container=document.getElementById("reviews-container");const t=document.createElement("h3");t.innerHTML="Reviews",container.appendChild(t);const n=document.createElement("BUTTON");n.innerHTML="+ Write your own review",n.setAttribute("onclick","createReviewFormHTML()"),container.appendChild(n),favLabel=document.createElement("LABEL"),favLabel.setAttribute("id","favCheckBoxLabel"),favLabel.innerHTML="Mark this restaurant as a favorite here: ",favLabel.setAttribute("for","favoritCheckbox"),container.appendChild(favLabel),(markFav=document.createElement("INPUT")).setAttribute("type","checkbox"),markFav.setAttribute("id","favoritCheckbox"),markFav.setAttribute("aria-checked","true"),updateFavCheckbox(),markFav.setAttribute("onclick","setFavorit("+self.restaurant.id+")"),container.appendChild(markFav),updateReviewList(e)}),updateReviewList=(e=>{const t=document.getElementById("reviews-list");if(t.innerHTML="",!e){const e=document.createElement("p");return"online"==condition?e.innerHTML="No reviews yet!":e.innerHTML="Reviews can not be loaded because network connection is offline!",void container.appendChild(e)}e.forEach(e=>{t.insertBefore(createReviewHTML(e),t.childNodes[0])}),container.appendChild(t)}),createReviewHTML=(e=>{const t=document.createElement("li");t.tabIndex=0;const n=document.createElement("p");n.innerHTML=e.name,t.appendChild(n);const r=document.createElement("p"),a=new Date(self.restaurant.createdAt);r.innerHTML=a.toDateString(),t.appendChild(r);const o=document.createElement("p");o.innerHTML=`Rating: ${e.rating}`,t.appendChild(o);const i=document.createElement("p");return i.innerHTML=e.comments,t.appendChild(i),t}),createReviewFormHTML=(()=>{const e=document.getElementById("reviewModal");e.style.display="block";const t=document.getElementById("reviews-list");t.insertBefore(e,t.childNodes[0])}),fillBreadcrumb=((e=self.restaurant)=>{const t=document.getElementById("breadcrumb"),n=document.createElement("li");n.innerHTML=e.name,t.appendChild(n)}),getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[\[\]]/g,"\\$&");const n=new RegExp(`[?&]${e}(=([^&#]*)|&|#|$)`).exec(t);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null});